<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <bean id="mailExtractor" class="won.bot.framework.eventbot.action.impl.mail.receive.MailContentExtractor">
        <property name="demandTypePattern">
            <bean id="demandTypePattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^\[WANT\].*"/>
            </bean>
        </property>
        <property name="supplyTypePattern">
            <bean id="supplyTypePattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^\[OFFER\].*"/>
            </bean>
        </property>
        <property name="doTogetherTypePattern">
            <bean id="doTogetherTypePattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^\[TOGETHER\].*"/>
            </bean>
        </property>
        <property name="critiqueTypePattern">
            <bean id="critiqueTypePattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^\[CRITIQUE\].*"/>
            </bean>
        </property>
        <property name="tagExtractionPattern">
            <bean id="tagExtractionPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="[#]+[\w]+\b"/>
            </bean>
        </property>
        <property name="textMessageExtractionPattern">
            <bean id="textMessageExtractionPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?s).+?(?=\b[^\n]*\n>)"/>
            </bean>
        </property>
        <property name="descriptionExtractionPattern">
            <bean id="descriptionExtractionPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?s).*"/>
            </bean>
        </property>
        <property name="titleExtractionPattern">
            <bean id="titleExtractionPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg>
                    <value><![CDATA[(?s)(?<=\]).*]]></value>
                </constructor-arg>
            </bean>
        </property>
        <property name="usedForTestingPattern">
            <bean id="usedForTestingPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value=".*?\[DEBUG\].*?"/>
            </bean>
        </property>
        <property name="cmdTakenPattern">
            <bean id="cmdTakenPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value=".*?\[TAKEN\].*?"/>
            </bean>
        </property>
        <property name="doNotMatchPattern">
            <bean id="doNotMatchPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value=".*?\[NO_MATCH\].*?"/>
            </bean>
        </property>
        <property name="cmdClosePattern">
            <bean id="cmdClosePattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^close.*"/>
            </bean>
        </property>
        <property name="cmdConnectPattern">
            <bean id="cmdConnectPattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^connect.*"/>
            </bean>
        </property>
        <property name="cmdSubscribePattern">
            <bean id="cmdSubscribePattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^subscribe.*"/>
            </bean>
        </property>
        <property name="cmdUnsubscribePattern">
            <bean id="cmdUnsubscribePattern" class="java.util.regex.Pattern" factory-method="compile">
                <constructor-arg value="(?si)^unsubscribe.*"/>
            </bean>
        </property>
    </bean>
</beans>
